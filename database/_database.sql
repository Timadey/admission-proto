PRAGMA foreign_keys=OFF;
BEGIN TRANSACTION;
CREATE TABLE IF NOT EXISTS "migrations" ("id" integer primary key autoincrement not null, "migration" varchar not null, "batch" integer not null);
INSERT INTO migrations VALUES(1,'0001_01_01_000000_create_users_table',1);
INSERT INTO migrations VALUES(2,'0001_01_01_000001_create_cache_table',1);
INSERT INTO migrations VALUES(3,'0001_01_01_000002_create_jobs_table',1);
INSERT INTO migrations VALUES(4,'2024_07_07_223346_create_admission_applications_table',1);
INSERT INTO migrations VALUES(5,'2024_07_09_053906_create_course_applications_table',1);
INSERT INTO migrations VALUES(6,'2024_07_09_053930_create_personal_details_table',1);
INSERT INTO migrations VALUES(7,'2024_07_09_053954_create_education_table',1);
INSERT INTO migrations VALUES(8,'2024_07_09_054010_create_professional_qualifications_table',1);
INSERT INTO migrations VALUES(9,'2024_07_09_054037_create_professional_organisations_table',1);
INSERT INTO migrations VALUES(10,'2024_07_09_054050_create_attestations_table',1);
INSERT INTO migrations VALUES(11,'2024_07_11_154134_create_grades_table',1);
CREATE TABLE IF NOT EXISTS "users" ("id" varchar not null, "name" varchar not null, "email" varchar not null, "email_verified_at" datetime, "password" varchar not null, "remember_token" varchar, "created_at" datetime, "updated_at" datetime, primary key ("id"));
CREATE TABLE IF NOT EXISTS "password_reset_tokens" ("email" varchar not null, "token" varchar not null, "created_at" datetime, primary key ("email"));
CREATE TABLE IF NOT EXISTS "sessions" ("id" varchar not null, "user_id" integer, "ip_address" varchar, "user_agent" text, "payload" text not null, "last_activity" integer not null, primary key ("id"));
CREATE TABLE IF NOT EXISTS "cache" ("key" varchar not null, "value" text not null, "expiration" integer not null, primary key ("key"));
CREATE TABLE IF NOT EXISTS "cache_locks" ("key" varchar not null, "owner" varchar not null, "expiration" integer not null, primary key ("key"));
CREATE TABLE IF NOT EXISTS "jobs" ("id" integer primary key autoincrement not null, "queue" varchar not null, "payload" text not null, "attempts" integer not null, "reserved_at" integer, "available_at" integer not null, "created_at" integer not null);
CREATE TABLE IF NOT EXISTS "job_batches" ("id" varchar not null, "name" varchar not null, "total_jobs" integer not null, "pending_jobs" integer not null, "failed_jobs" integer not null, "failed_job_ids" text not null, "options" text, "cancelled_at" integer, "created_at" integer not null, "finished_at" integer, primary key ("id"));
CREATE TABLE IF NOT EXISTS "failed_jobs" ("id" integer primary key autoincrement not null, "uuid" varchar not null, "connection" text not null, "queue" text not null, "payload" text not null, "exception" text not null, "failed_at" datetime not null default CURRENT_TIMESTAMP);
CREATE TABLE IF NOT EXISTS "admission_applications" ("application_code" integer not null, "user_id" varchar not null, "completed" tinyint(1) not null default '0', "applied_at" datetime, "created_at" datetime, "updated_at" datetime, foreign key("user_id") references "users"("id"), primary key ("application_code"));
CREATE TABLE IF NOT EXISTS "course_applications" ("id" varchar not null, "application_code" integer not null, "first_choice" varchar check ("first_choice" in ('PUBLIC HEALTH', 'COMMUNITY HEALTH', 'HEALTH INFOMATION MANAGEMENT', 'MEDICAL LABORATORY SCIENCE', 'MIDWIFERY', 'GENERAL NURSING')) not null, "second_choice" varchar check ("second_choice" in ('PUBLIC HEALTH', 'COMMUNITY HEALTH', 'HEALTH INFOMATION MANAGEMENT', 'MEDICAL LABORATORY SCIENCE', 'MIDWIFERY', 'GENERAL NURSING')) not null, "created_at" datetime, "updated_at" datetime, foreign key("application_code") references "admission_applications"("application_code"), primary key ("id"));
CREATE TABLE IF NOT EXISTS "personal_details" ("id" varchar not null, "application_code" integer not null, "title" varchar check ("title" in ('Mr.', 'Mrs.', 'Ms.', 'Dr.')) not null, "surname" varchar not null, "other_names" varchar not null, "gender" varchar check ("gender" in ('Male', 'Female')) not null, "date_of_birth" date not null, "religion" varchar check ("religion" in ('Christianity', 'Islam')) not null, "current_residential_address" varchar not null, "local_government" varchar not null, "state_of_origin" varchar not null, "phone_number" varchar not null, "signature_url" varchar not null, "passport_photograph_url" varchar not null, "created_at" datetime, "updated_at" datetime, foreign key("application_code") references "admission_applications"("application_code"), primary key ("id"));
CREATE TABLE IF NOT EXISTS "education" ("id" varchar not null, "application_code" integer not null, "examination_type" varchar check ("examination_type" in ('NECO', 'WAEC', 'GCE', 'NABTEB')) not null, "year" integer not null, "created_at" datetime, "updated_at" datetime, foreign key("application_code") references "admission_applications"("application_code"), primary key ("id"));
CREATE TABLE IF NOT EXISTS "professional_qualifications" ("id" varchar not null, "application_code" integer not null, "examination_board" varchar not null, "qualification" varchar not null, "date" date not null, "created_at" datetime, "updated_at" datetime, foreign key("application_code") references "admission_applications"("application_code"), primary key ("id"));
CREATE TABLE IF NOT EXISTS "professional_organisations" ("id" varchar not null, "application_code" integer not null, "organistaion" varchar not null, "subject" varchar not null, "result" varchar not null, "date" date not null, "created_at" datetime, "updated_at" datetime, foreign key("application_code") references "admission_applications"("application_code"), primary key ("id"));
CREATE TABLE IF NOT EXISTS "attestations" ("id" varchar not null, "application_code" integer not null, "full_name" varchar not null, "address" varchar not null, "position_held" varchar not null, "phone_number" varchar not null, "signature_url" varchar not null, "created_at" datetime, "updated_at" datetime, foreign key("application_code") references "admission_applications"("application_code"), primary key ("id"));
CREATE TABLE IF NOT EXISTS "grades" ("id" varchar not null, "education_id" integer not null, "subject_name" varchar not null, "grade" varchar not null, "created_at" datetime, "updated_at" datetime, foreign key("education_id") references "education"("id"), primary key ("id"));
DELETE FROM sqlite_sequence;
INSERT INTO sqlite_sequence VALUES('migrations',11);
CREATE UNIQUE INDEX "users_email_unique" on "users" ("email");
CREATE INDEX "sessions_user_id_index" on "sessions" ("user_id");
CREATE INDEX "sessions_last_activity_index" on "sessions" ("last_activity");
CREATE INDEX "jobs_queue_index" on "jobs" ("queue");
CREATE UNIQUE INDEX "failed_jobs_uuid_unique" on "failed_jobs" ("uuid");
COMMIT;
